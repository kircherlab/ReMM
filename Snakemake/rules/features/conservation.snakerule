rule get_priPhyloP:
    output:
        "input/features/hg38/priPhyloP/priPhyloP.all.wig.gz"
    params:
        url=config['hg38']['priPhyloP']["url"]
    shell:
        """
        curl {params.url} > {output}
        """

rule get_priPhastCons:
    output:
        "input/features/hg38/priPhastCons/priPhastCons.all.wig.gz"
    params:
        url=config['hg38']['priPhastCons']["url"]
    shell:
        """
        curl {params.url} > {output}
        """

rule get_verPhyloP:
    output:
        "input/features/hg38/verPhyloP/verPhyloP.{chr}.wig.gz"
    params:
        url=lambda wildcards: "%s%s.phyloP100way.wigFix.gz" % (config['hg38']['verPhyloP']["url"], wildcards.chr)
    shell:
        """
        curl {params.url} > {output}
        """

rule get_verPhastCons:
    output:
        "input/features/hg38/verPhastCons/verPhastCons.{chr}.wig.gz"
    params:
        url=lambda wildcards: "%s%s.phastCons100way.wigFix.gz" % (config['hg38']['verPhastCons']["url"], wildcards.chr)
    shell:
        """
        curl {params.url} > {output}
        """

rule get_mamPhastCons:
    output:
        "input/features/hg38/mamPhastCons/mamPhastCons.{chr}.wig.gz"
    params:
        url=lambda wildcards: "%s%s.phastCons30way.wigFix.gz" % (config['hg38']['mamPhastCons']["url"], wildcards.chr)
    shell:
        """
        curl {params.url} > {output}
        """

rule get_mamPhyloP:
    output:
        "input/features/hg38/mamPhyloP/mamPhyloP.{chr}.wig.gz"
    params:
        url=lambda wildcards: "%s%s.phyloP30way.wigFix.gz" % (config['hg38']['mamPhyloP']["url"], wildcards.chr)
    shell:
        """
        curl {params.url} > {output}
        """
